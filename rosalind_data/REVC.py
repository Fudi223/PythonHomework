# Creating a complementary DNA strand

dna_strand = "AAGGGGATGAAGATTTCGTAATACCTATAATGGCATTAGTAGTCTAAAACTGCTTCATCACTTTCCGACAGATAAATCTAATATCTGCGACGACCATAGCGGATTACGTAAGCCCCACGGGCCGATGGGATCTGACTCCCCCCCTTCCAAAGCTTTTGTGAAGCCGACTTTCGGACCTGCGTCCCGGATATTAAAGAGACTACCCGCGGCAGTTGCATTGTGCTGAGTTTGGATCTAAGTATGCATGTTGGCGAAACGCGATTCCCTTGGCCACGAAAAAGAAGGTTCGCGCTTGGTCTTCCACTGTCATACGCCTCCTATCTGCATGAAGAACTCCGGTGGCTGGCGCTCTTGACTCACTGCACCATACACTTGACTACCCTCCGAGCGGCAGGGGACAAGTTCTGGTATTAGACGGCCTTGAACTCCCCCGAATTTAAGCTGCGCAGAACCAAGATGAGCGGGATAAGCCTACCTTTAGTAGATAGGAGCAAGTCTGTCGGTGCTCCTATCGGTAACTAGGTCTACTGAGTCCGACAAACTAGAATTAGCAGTCAATGTGGATCTGGAGTCACGTGATGCCCTCCAACGGGGGTGCCTTCAAAGAGTACCGGACCGAAACTCTCGCCTAGTTTGCGGTAGGCTAGGCCGTTAATGTTTGGCCCCAAAAAGTCAGCGACGATTGTCTACCGGCTAGCATAGCTCACTAAGGTACGACATTCCGCACCGTCAGAATGTCGATCAACCGCATCCCGACTCTAGCCGTAAGGTGTGGCAGCGTTGGAAATATGAAATGCCCGGCCTGTTGATTGTTTCCTCAACAGCACGATGGATAGTCCTCCGTGGGTGATCAATTACACCAGCTCTAGCGAGCAACAAGCGATAGCAGCCGCTTGGAGCCTGACGGCCGGAACCTCTACTGCACCTTGCGCTTTCAAGTTCTATCCTGAGCAATAAGAGAAACTGGTTAGGCTCCCGATGAACGTG
"
# To reverse the strand, I used the slicing function to read it from the back

reverse_strand = dna_strand[::-1]

# I checked if this worked by using the print function (it did work)

# I searched up stuff and found out about "str.maketrans" which I applied here

complementary_nukes = str.maketrans("ATCG", "TAGC")

complementary_strand = reverse_strand.translate(complementary_nukes)

print(complementary_strand)