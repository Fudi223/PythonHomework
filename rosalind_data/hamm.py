#!/usr/bin/env python3

# Rosalind HAMM exercise

# Given 2 Strings, "s" and "t", both equally long. 

# Hamming distance: The minimum number of symbol substitutions required to change on string into another of equal lenght

# "dH" is the number of corresponding symbols that differ in "s" and "t"

# "dH" is what we want! (Output should be a number)

# I think I want to create a loop, that will take one of the strings, compare it with an if statement to the other one, and for each mismatch create a list
# where the mismatched nucleotides are added, this will be called "dH". Finally, Id use print(dH) and get the number of mismatches this way. 

# I didnt use "read_input" here, because I didnt know exactly how to split the two strings inside the one file into two. So I just copy pasted it

# mental notes: have an empty list where we will add the ATGCs : dH""



# from util import read_input

s = "TGCAGGGCTTAATTTATACTTAGTACACGCCAACAGCTGGAATCCTCCTTTTATACGCGTGCGGAGGAGATGTGAAGCAGGGTCTTGACTCTTACGAAGATCGGGCTAAGAGCAATAATGCGTCCAGGCGAACCTATCGCATACATCTCCGATGCGATAAGGTGTTCTACCATTACTTTGAAGACTCTTGCAGCACATCTTACACTGTTTCGACACCATCCGGCCGGTGACGAGTTAGCAAGTCATACGACAGCGCCGCTCTCAGGCTTGACACTAGTTACCTTCGGGAGAGCTGACAAAGGAAAAGACAACGGTCAATAACATGATTATTAGAGGTTAACATGTCCGTAGGACTTTCCCACGGACTTGAAGGTTTCACACATTTTACGGGTGAGTACGAGTTAGAGGCGATTTAGGACACCGGCTAAAAACTTCCTGAGTACTGTTGGATCAGCGAACTATAGCGGGCTGGGCCAGTCTTACCCGCGACACGCTGTTGCGATACATTTTGGCCTTGCACCCGGAAAAGCGTCTCGAAGTTCTCAAATCGTCGCCCGTTTAGAGCAGTAAGCGGCGCCCGCAGATTTAACCGTTGGTAGGAGCAGCTTCCTTTAAAATACTAGGGTGGTCCTTGTGAGTACTACGCGATGTATATCAACCTCATTGATACACCTGCTAACGTCTGGAATGCGAGAGTCTATGTCGACCCGTTGACCCGTGCGTGGAACTGTCCTAGAGGTGTTCCTCATAACTGTTTGCGATCGCCAGGCTGGCGACAACCTAAATCGGTCCAACCGGTGAAACGCACTGGAATAGATCAAAACGCTAGGACTATGTCTTACTAGTCAGTCGGTAAGCGGTATGCGTACACGCCCGTTCATGTGCACAGTACCCCATCAGTTGGCGATGGATACGTCCCAATAGGCAATCTTTATGCTAGACGACCCGCCCCTCCCGAAGACACACGTGCTTTCCCTGTGATTCCCAT"

t = "TCGACGATTTGGTTCATTCTTGGTACGCGTGTAATACCGTTAACCCGAAAAAGAAGCCCTGCGGTGGCAGCGCGAGTAATGGGCGGGTCACACACTTTGTTGTGTCTAGGAGTCCTATCGAGGCGAGCCGGGCTTAACGCCCAAATGTCGTACGTTATCCGGCGTAATTGAGTTCCGGAGAAGAGACTTGCAGAACATCAACCCGAGCCGGGACGCTAGCCCCACGATTGCACAATGCCACGACACACGCAAGTAACTGTCGACATCTGAATAGCCGTAACCACGCGGTGAGAGGCTCTCGGCAAAGACGCCGGTCTAAAACTAGAGTATTCAAGTCGATCCTGTGCCTCCGATTTGCGCCCGCTCATGAGACTTTCGCACTCGCCACGAATGCGTACACGTTAGACACACCTTCGTATCACACCTAATAACACCAGAGGCGATGTCTGAGCCTTCAAAGCAAGACGGCTAGGCGCCTGCACATTGCGCGAGAGACTGTCGCGATCTGTTGATCTATCCCCATTGAGCCCATCACGGCTTCGCGCAGGCAGTGTTGTTGTTAGTAAGTAAGCTGGTTCCGCGGCCTTTAAAGTACGCAGGCTCACGTCCTGTCTAAACCCTCAGGGTGTGCTTATACGGACTAAGAGCGGAATGTTAGGATCTTAGATACGACTTGGGACCTTCCGTATCCGTGGCTCTTGCATGAGTCGCTCTTTCTCACAAGGTATAAGACTAAACTTTTACCCCATAGTCGTTGGCCCTGGCAAGGGTGTCGAGAGCATAGAGGCAATCACTTGATCACACGTAGCGGAGCGGGAGAAAAGGCACCATGGCCTGGATCGTAACCCGTCCGAATCCGTTTTGCGGACACGGGTCTTCCTCTCCACGAACTGCCAACGGATGGTCATAGGCACTCAGCAGTTTCATAAGTCTCAACAAGTCGCCCCAATCATACCCGAGCGGCTCGTGCTGGCCCCCTCACCGCGAC"

dH = ""

# hamms = zip(s, t)


for nucl_s, nucl_t in zip(s, t):
    if nucl_s != nucl_t:
        dH += nucl_s
    else:
        pass
print(len(dH))

# Note: I had to look up some stuff and found out what zip does and with that it became easier to solve. I knew right away that a comparison and counting a new list would be needed.




